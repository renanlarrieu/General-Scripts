// File: Up_Counter.v
// Generated by MyHDL 0.10
// Date: Tue Aug 14 06:51:18 2018


`timescale 1ns/10ps

module Up_Counter (
    count,
    Trig,
    clk,
    rst
);
// UpCounter
// 
// Input:
//     clk(bool): system clock feed
//     rst(bool): clock reset signal
// Ouput:
//     count (bit vector): current count value; count 
//     Trig(bool)
// 
// Parmeter(Python Only):
//     CountVal(int): value to count to
//     BitSize (int): Bitvalue size is log_2(CountVal)+1
//     

output [4:0] count;
wire [4:0] count;
output Trig;
wire Trig;
input clk;
input rst;

reg [4:0] count_i;
reg Trig_i;



always @(posedge clk, negedge rst) begin: UP_COUNTER_LOGIC
    if (rst) begin
        count_i <= 0;
        Trig_i <= 0;
    end
    else if ((((count_i % 17) == 0) && (count_i != 0))) begin
        Trig_i <= 1;
        count_i <= 0;
    end
    else begin
        count_i <= (count_i + 1);
    end
end



assign count = count_i;
assign Trig = Trig_i;

endmodule
