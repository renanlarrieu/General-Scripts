// File: RingCounter.v
// Generated by MyHDL 0.10
// Date: Wed Sep  5 07:53:27 2018


`timescale 1ns/10ps

module RingCounter (
    seed,
    Dir,
    q,
    clk,
    rst
);
// Seedable and direction controlable ring counter in myHDL
// 
// Input:
//     seed(bitvec): intial value for ring counter
//     Dir(enum): Direction contorl signal
//     clk(bool): clock
//     rst(bool): reset
// Output

input [3:0] seed;
input [1:0] Dir;
output [3:0] q;
wire [3:0] q;
input clk;
input rst;

reg [3:0] q_i = 3;



always @(posedge clk, negedge rst) begin: RINGCOUNTER_RCSTATEMACHINE
    if (rst) begin
        q_i <= seed;
    end
    else if ((Dir == 2'b00)) begin
        q_i <= {q_i[(4 - 1)-1:0], q_i[(4 - 1)]};
    end
    else if ((Dir == 2'b01)) begin
        q_i <= q_i;
    end
    else if ((Dir == 2'b10)) begin
        q_i <= {q_i[0], q_i[4-1:1]};
    end
end



assign q = q_i;

endmodule
