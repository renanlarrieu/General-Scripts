// File: JohnsonCount3.v
// Generated by MyHDL 0.10
// Date: Wed Sep  5 07:53:01 2018


`timescale 1ns/10ps

module JohnsonCount3 (
    Dir,
    q,
    clk,
    rst
);
// Based of the `jc2` exsample from the myHDL website 
// http://www.myhdl.org/docs/examples/jc2.html
// 
// Input:
//     Dir(state): Left,Right, Halt Direction States
//     clk(bool): input clock
//     rst(bool): reset signal
// 
// Ouput:
//     q(bitVec): the values in the D flip flops(aka counter)

input [1:0] Dir;
output [3:0] q;
wire [3:0] q;
input clk;
input rst;

reg [3:0] q_i = 0;



always @(posedge clk, negedge rst) begin: JOHNSONCOUNT3_JCSTATEMACHINE
    if (rst) begin
        q_i <= 0;
    end
    else if ((Dir == 2'b00)) begin
        q_i[4-1:1] <= q_i[(4 - 1)-1:0];
        q_i[0] <= (!q_i[(4 - 1)]);
    end
    else if ((Dir == 2'b01)) begin
        q_i <= q_i;
    end
    else if ((Dir == 2'b10)) begin
        q_i[(4 - 1)-1:0] <= q_i[4-1:1];
        q_i[(4 - 1)] <= (!q_i[0]);
    end
end



assign q = q_i;

endmodule
