// File: read_pointer.v
// Generated by MyHDL 0.10
// Date: Mon Aug 27 20:10:08 2018


`timescale 1ns/10ps

module read_pointer (
    rd,
    fifo_empty,
    rptr,
    fifo_rd,
    clk,
    rst_n
);
// Input:
//     rd(bool):write signal
//     fifo_empty(bool): fifo empty signal
//     clk(bool): clock
//     rst_n(bool): negtive reset signal
//     
// Ouput:
//     rptr(5bit): the read out memory pointer
//     fifo_rd(bool): the read enable indication signal

input rd;
input fifo_empty;
output [4:0] rptr;
wire [4:0] rptr;
output fifo_rd;
wire fifo_rd;
input clk;
input rst_n;

wire fifo_rd_i;
reg [4:0] rptr_i = 0;




assign fifo_rd_i = ((!fifo_empty) && rd);


always @(posedge clk, negedge rst_n) begin: READ_POINTER_POINTERUPDATE
    if (rst_n) begin
        rptr_i <= 0;
    end
    else if (fifo_rd_i) begin
        rptr_i <= (rptr_i + 1);
    end
    else begin
        rptr_i <= rptr_i;
    end
end



assign fifo_rd = fifo_rd_i;
assign rptr = rptr_i;

endmodule
