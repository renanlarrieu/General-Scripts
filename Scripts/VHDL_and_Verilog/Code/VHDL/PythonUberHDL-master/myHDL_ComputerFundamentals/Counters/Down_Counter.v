// File: Down_Counter.v
// Generated by MyHDL 0.10
// Date: Tue Aug 14 06:51:21 2018


`timescale 1ns/10ps

module Down_Counter (
    count,
    Trig,
    clk,
    rst
);
// DownCounter
// 
// Input:
//     clk(bool): system clock feed
//     rst(bool): clock reset signal
// Ouput:
//     count (bit vector): current count value; count 
//     Trig(bool)
// 
// Parmeter(Python Only):
//     StartVal(int): value to count from
//     BitSize (int): Bitvalue size is log_2(CountVal)+1
// CatButt
//     

output [4:0] count;
wire [4:0] count;
output Trig;
reg Trig;
input clk;
input rst;

reg [4:0] count_i = 17;



always @(posedge clk, negedge rst) begin: DOWN_COUNTER_LOGIC
    if (rst) begin
        count_i <= 17;
        Trig <= 0;
    end
    else if ((count_i == 0)) begin
        Trig <= 1;
        count_i <= 17;
    end
    else begin
        count_i <= (count_i - 1);
    end
end



assign count = count_i;

endmodule
