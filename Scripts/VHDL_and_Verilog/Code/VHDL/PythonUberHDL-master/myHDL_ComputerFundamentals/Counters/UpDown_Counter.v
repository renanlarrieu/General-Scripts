// File: UpDown_Counter.v
// Generated by MyHDL 0.10
// Date: Tue Aug 14 06:51:24 2018


`timescale 1ns/10ps

module UpDown_Counter (
    Dir,
    count,
    Trig,
    clk,
    rst
);
// UpDownCounter, hybrid of a simple Up Counter and 
// a simple Down Counter using `Dir` to control Up/Down 
// count Direction 
// 
// Input:
//     Dir(): 
//     clk(bool): system clock feed
//     rst(bool): clock reset signal
// Ouput:
//     count (bit vector): current count value; count 
//     Trig(bool)
// 
// Parmeter(Python Only):
//     CountVal(int): Highest Value for counter
//     StartVal(int): starting value for internal counter
//     BitSize (int): Bitvalue size is log_2(CountVal)+1
//     

input [0:0] Dir;
output [4:0] count;
wire [4:0] count;
output Trig;
reg Trig;
input clk;
input rst;

reg [4:0] count_i = 8;



always @(posedge clk, negedge rst) begin: UPDOWN_COUNTER_LOGIC
    if (rst) begin
        count_i <= 8;
        Trig <= 0;
    end
    else if ((((count_i / 17) == 1) && (rst == 0))) begin
        count_i <= 8;
    end
    else if ((Dir == 1'b0)) begin
        count_i <= (count_i + 1);
        if (((count_i % 17) == 0)) begin
            Trig <= 1;
        end
    end
    else if ((Dir == 1'b1)) begin
        count_i <= (count_i - 1);
        if (((count_i % 17) == 0)) begin
            Trig <= 1;
        end
    end
end



assign count = count_i;

endmodule
